[{"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\index.js":"1","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\App.js":"2","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\reportWebVitals.js":"3","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\MyForm.js":"4","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Home\\Home.js":"5","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Display\\Display.js":"6","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Articulo\\Articulo.js":"7","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Login\\Login.js":"8","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\components\\Label\\Label.jsx":"9","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\components\\Title\\Title.jsx":"10","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\components\\Input\\Input.jsx":"11"},{"size":1646,"mtime":1682346740747,"results":"12","hashOfConfig":"13"},{"size":578,"mtime":1682346740744,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1681391388400,"results":"15","hashOfConfig":"13"},{"size":1007,"mtime":1681391388383,"results":"16","hashOfConfig":"13"},{"size":747,"mtime":1681410074837,"results":"17","hashOfConfig":"13"},{"size":11050,"mtime":1682346740759,"results":"18","hashOfConfig":"13"},{"size":9859,"mtime":1682346740753,"results":"19","hashOfConfig":"13"},{"size":2549,"mtime":1682346740767,"results":"20","hashOfConfig":"13"},{"size":179,"mtime":1681391388398,"results":"21","hashOfConfig":"13"},{"size":227,"mtime":1681391388399,"results":"22","hashOfConfig":"13"},{"size":493,"mtime":1681391388396,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oszj99",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\index.js",[],[],"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\App.js",["61"],[],"//import Login from './pages/Login/Login';\r\nimport React, { Component } from 'react';\r\nimport Login from \"./pages/Login/Login\";\r\nimport Articulo from './pages/Articulo/Articulo';\r\nimport {Route, Routes } from 'react-router-dom';\r\nimport Display from './pages/Display/Display';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/articulo\" element={<Articulo />} />\r\n        <Route path=\"/display\" element={<Display />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\reportWebVitals.js",[],[],"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\MyForm.js",[],[],"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Home\\Home.js",[],[],"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Display\\Display.js",["62","63","64","65","66"],[],"import React, { useState } from 'react';\r\nimport './Display.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table, Button, Container, Modal, ModalBody, ModalHeader, FormGroup, ModalFooter } from 'reactstrap';\r\n\r\nconst data = [\r\n    { id: 1, referencia: \"Oppo reno 5 lite\", calidad: \"OLED\", cantidad: 5, precio: 120000 },\r\n    { id: 2, referencia: \"OnePlus 11 5G\", calidad: \"AMOLED\", cantidad: 9, precio: 90000 },\r\n    { id: 3, referencia: \"Samsung j4 plus\", calidad: \"ORIGINAL\", cantidad: 2, precio: 110000 },\r\n];\r\n\r\nclass Display extends React.Component {\r\n    state = {\r\n        data: data,\r\n        form: {\r\n            id: '',\r\n            referencia: '',\r\n            calidad: '',\r\n            cantidad: '',\r\n            precio: ''\r\n        },\r\n        modalInsertar: false,\r\n        modalEditar: false,\r\n        modalEliminar: false,\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        });\r\n    }\r\n    mostrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: true });\r\n    }\r\n    ocultarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    }\r\n    mostrarModalEditar = (registro) => {\r\n        this.setState({ modalEditar: true, form: registro });\r\n    }\r\n    ocultarModalEditar = () => {\r\n        this.setState({ modalEditar: false });\r\n    }\r\n    mostrarModalEliminar = (registro) => {\r\n        this.setState({ modalEliminar: true, form: registro});\r\n    }\r\n    ocultarModalEliminar = () => {\r\n        this.setState({ modalEliminar: false });\r\n    }\r\n    insertar = () => {\r\n        let valorNuevo = { ...this.state.form };\r\n        valorNuevo.id = this.state.data.length + 1;\r\n        let lista = this.state.data;\r\n        lista.push(valorNuevo);\r\n        this.setState({ data: lista, modalInsertar: false });\r\n    }\r\n    editar = (dato) => {\r\n        let contador = 0;\r\n        let lista = this.state.data;\r\n        lista.map((registro) => {\r\n            if (dato.id == registro.id) {\r\n                lista[contador].nombre = dato.nombre;\r\n                lista[contador].cantidad = dato.cantidad;\r\n                lista[contador].precio = dato.precio;\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ data: lista, modalEditar: false });\r\n    }\r\n    eliminar = (dato) => {\r\n        let contador = 0;\r\n            let lista = this.state.data;\r\n            lista.map((registro) => {\r\n                if (dato.id == registro.id) {\r\n                    lista.splice(contador, 1);\r\n                }\r\n                contador++;\r\n            });\r\n            this.setState({ data: lista, modalEliminar: false});     \r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className='articulo-container'>\r\n\r\n            \r\n                <Container>\r\n                        <br />\r\n                        <Button color='none' className='btn-insertar' onClick={() => this.mostrarModalInsertar()}></Button>\r\n                        <br /><br />\r\n                    \r\n\r\n                    <Table>\r\n                        <div className='nombre-columnas'>\r\n\r\n                        </div>\r\n                        <thead><tr><th>Id</th>\r\n                            <th>Referencia</th><th>Calidad</th><th>Cantidad</th>\r\n                            <th>Precio</th><th>Acciones</th>\r\n                        </tr></thead>\r\n                        <tbody>\r\n                            {this.state.data.map((elemento) => (\r\n                                <tr>\r\n                                    <td>{elemento.id}</td>\r\n                                    <td>{elemento.referencia}</td>\r\n                                    <td>{elemento.calidad}</td>\r\n                                    <td>{elemento.cantidad}</td>\r\n                                    <td>{elemento.precio}</td>\r\n                                    <td><Button color=\"none\" className=\"btn-editar\" onClick={() => this.mostrarModalEditar(elemento)}></Button>\r\n{\"           \"}\r\n                                        <Button color=\"none\" className='btn-eliminar' onClick={() => this.mostrarModalEliminar(elemento)}></Button></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Insertar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Id:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                readOnly\r\n                                type=\"text\" value={this.state.data.length + 1}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Referencia:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"referencia\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Calidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"calidad\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Cantidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"cantidad\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Precio:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"precio\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => this.insertar()}>Insertar</Button>\r\n                        <Button color=\"danger\" onClick={() => this.ocultarModalInsertar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.modalEditar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Editar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Id:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                readOnly\r\n                                type=\"text\" value={this.state.form.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Referencia:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"referencia\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.referencia}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Calidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"calidad\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.calidad}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Cantidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"cantidad\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.cantidad}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Precio:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"precio\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.precio}\r\n                            />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => this.editar(this.state.form)}>Editar</Button>\r\n                        <Button color=\"danger\" onClick={() => this.ocultarModalEditar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.modalEliminar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Editar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                ¿Deseas eliminar el display seleccionado con el id: {this.state.form.id}?\r\n                            </label>\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        \r\n                        <Button color=\"none\" className='btn-aceptar1' onClick={() => this.eliminar(this.state.form)}></Button>\r\n                        <Button color=\"none\" className='btn-cancelar1' onClick={() => this.ocultarModalEliminar()}></Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                </div>\r\n            </>)\r\n    }\r\n}\r\n\r\nexport default Display;","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Articulo\\Articulo.js",["67","68","69","70","71"],[],"import React, { useState } from 'react';\r\nimport './Articulo.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table, Button, Container, Modal, ModalBody, ModalHeader, FormGroup, ModalFooter } from 'reactstrap';\r\n\r\nconst data = [\r\n    { id: 1, nombre: \"Cargador tipo C\", cantidad: 5, precio: 20000 },\r\n    { id: 2, nombre: \"Cable Tipo C\", cantidad: 9, precio: 10000 },\r\n];\r\n\r\nclass Articulo extends React.Component {\r\n    state = {\r\n        data: data,\r\n        form: {\r\n            id: '',\r\n            nombre: '',\r\n            cantidad: '',\r\n            precio: ''\r\n        },\r\n        modalInsertar: false,\r\n        modalEditar: false,\r\n        modalEliminar: false,\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        });\r\n    }\r\n    mostrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: true });\r\n    }\r\n    ocultarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    }\r\n    mostrarModalEditar = (registro) => {\r\n        this.setState({ modalEditar: true, form: registro });\r\n    }\r\n    ocultarModalEditar = () => {\r\n        this.setState({ modalEditar: false });\r\n    }\r\n    mostrarModalEliminar = (registro) => {\r\n        this.setState({ modalEliminar: true, form: registro});\r\n    }\r\n    ocultarModalEliminar = () => {\r\n        this.setState({ modalEliminar: false });\r\n    }\r\n    insertar = () => {\r\n        let valorNuevo = { ...this.state.form };\r\n        valorNuevo.id = this.state.data.length + 1;\r\n        let lista = this.state.data;\r\n        lista.push(valorNuevo);\r\n        this.setState({ data: lista, modalInsertar: false });\r\n    }\r\n    editar = (dato) => {\r\n        let contador = 0;\r\n        let lista = this.state.data;\r\n        lista.map((registro) => {\r\n            if (dato.id == registro.id) {\r\n                lista[contador].nombre = dato.nombre;\r\n                lista[contador].cantidad = dato.cantidad;\r\n                lista[contador].precio = dato.precio;\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ data: lista, modalEditar: false });\r\n    }\r\n    eliminar = (dato) => {\r\n        let contador = 0;\r\n            let lista = this.state.data;\r\n            lista.map((registro) => {\r\n                if (dato.id == registro.id) {\r\n                    lista.splice(contador, 1);\r\n                }\r\n                contador++;\r\n            });\r\n            this.setState({ data: lista, modalEliminar: false});     \r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className='articulo-container'>\r\n\r\n            \r\n                <Container>\r\n                        <br />\r\n                        <Button color='none' className='btn-insertar' onClick={() => this.mostrarModalInsertar()}></Button>\r\n                        <br /><br />\r\n                    \r\n\r\n                    <Table>\r\n                        <div className='nombre-columnas'>\r\n\r\n                        </div>\r\n                        <thead><tr><th>Id</th>\r\n                            <th>Nombre</th><th>Cantidad</th>\r\n                            <th>Precio</th><th>Acciones</th>\r\n                        </tr></thead>\r\n                        <tbody>\r\n                            {this.state.data.map((elemento) => (\r\n                                <tr>\r\n                                    <td>{elemento.id}</td>\r\n                                    <td>{elemento.nombre}</td>\r\n                                    <td>{elemento.cantidad}</td>\r\n                                    <td>{elemento.precio}</td>\r\n                                    <td><Button color=\"none\" className=\"btn-editar\" onClick={() => this.mostrarModalEditar(elemento)}></Button>\r\n{\"           \"}\r\n                                        <Button color=\"none\" className='btn-eliminar' onClick={() => this.mostrarModalEliminar(elemento)}></Button></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Insertar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Id:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                readOnly\r\n                                type=\"text\" value={this.state.data.length + 1}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Nombre:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"nombre\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Cantidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"cantidad\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Precio:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"precio\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => this.insertar()}>Insertar</Button>\r\n                        <Button color=\"danger\" onClick={() => this.ocultarModalInsertar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.modalEditar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Editar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Id:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                readOnly\r\n                                type=\"text\" value={this.state.form.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Nombre:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"nombre\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.nombre}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Cantidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"cantidad\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.cantidad}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Precio:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"precio\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.precio}\r\n                            />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => this.editar(this.state.form)}>Editar</Button>\r\n                        <Button color=\"danger\" onClick={() => this.ocultarModalEditar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.modalEliminar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Editar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                ¿Deseas eliminar el articulo seleccionado con el id: {this.state.form.id}?\r\n                            </label>\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        \r\n                        <Button color=\"none\" className='btn-aceptar1' onClick={() => this.eliminar(this.state.form)}></Button>\r\n                        <Button color=\"none\" className='btn-cancelar1' onClick={() => this.ocultarModalEliminar()}></Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                </div>\r\n            </>)\r\n    }\r\n}\r\n\r\nexport default Articulo;","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\Login\\Login.js",["72","73","74"],[],"import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport Title from '../components/Title/Title';\r\nimport Label from '../components/Label/Label';\r\nimport Input from '../components/Input/Input';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n\r\n    const [user,setUser] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [isLogin,setIsLogin] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    function ifMatch(param){\r\n       if(param.user.length > 0 && param.password.length > 0){\r\n        if(param.user == 'root' && param.password=='root_*123'){\r\n            const {user,password} = param;\r\n            let ac = {user,password};\r\n            let account = JSON.stringify(ac);\r\n            localStorage.setItem('account',account);\r\n            setIsLogin(true);\r\n            navigate('/display');\r\n        }else{\r\n            setIsLogin(false);\r\n        }\r\n       }else{\r\n        setIsLogin(false);\r\n       }\r\n    \r\n    };\r\n\r\n    function  handleChange(name,value) {\r\n        if(name === 'usuario'){\r\n            setUser(value)\r\n        }else{\r\n            setPassword(value)\r\n        }\r\n    };\r\n    console.log('usuario:',user)\r\n    console.log('password', password)\r\n\r\n    function handleSubmit() {\r\n        let account = {user,password}\r\n\r\n        if(account){\r\n            ifMatch(account);\r\n        }\r\n    };\r\n    return( \r\n        \r\n        <div className='login-container'>\r\n            <Title text={\r\n                <div>\r\n                    <h1>JuanMCell</h1>\r\n                    <p>Iniciar sesión</p>\r\n                </div>\r\n            }/>\r\n\r\n\r\n            <div>\r\n            <Label text='Usuario'/>\r\n\r\n                <Input\r\n                attribute={{\r\n                    id:'usuario',\r\n                    name:'usuario',\r\n                    type:'text',\r\n                    placeHolder:'ingrese su usuario'\r\n\r\n                }}\r\n                handleChange={handleChange}\r\n                />\r\n                <Label text='Contraseña'/>\r\n                <Input\r\n                attribute={{\r\n                    id:'contraseña',\r\n                    name:'contraseña',\r\n                    type:'password',\r\n                    placeHolder:'ingrese su contraseña'\r\n\r\n                }}\r\n                handleChange={handleChange}\r\n                />\r\n                <button onClick={handleSubmit}>\r\n                    Ingresar\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n};\r\nexport default Login;","C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\components\\Label\\Label.jsx",[],[],"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\components\\Title\\Title.jsx",[],[],"C:\\Users\\santi\\Downloads\\Proyectos\\Software 3\\juanmcell\\juanmcell\\src\\pages\\components\\Input\\Input.jsx",[],[],{"ruleId":"75","severity":1,"message":"76","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":63,"column":30,"nodeType":"82","messageId":"83","endLine":63,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":64,"column":25,"nodeType":"86","messageId":"87","endLine":64,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":76,"column":34,"nodeType":"82","messageId":"83","endLine":76,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":77,"column":29,"nodeType":"86","messageId":"87","endLine":77,"endColumn":31},{"ruleId":"75","severity":1,"message":"79","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":61,"column":30,"nodeType":"82","messageId":"83","endLine":61,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":62,"column":25,"nodeType":"86","messageId":"87","endLine":62,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":74,"column":34,"nodeType":"82","messageId":"83","endLine":74,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":75,"column":29,"nodeType":"86","messageId":"87","endLine":75,"endColumn":31},{"ruleId":"75","severity":1,"message":"88","line":12,"column":12,"nodeType":"77","messageId":"78","endLine":12,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":17,"column":23,"nodeType":"86","messageId":"87","endLine":17,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":17,"column":50,"nodeType":"86","messageId":"87","endLine":17,"endColumn":52},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isLogin' is assigned a value but never used."]