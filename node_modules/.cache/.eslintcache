[{"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\index.js":"1","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\reportWebVitals.js":"2","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\App.js":"3","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Login\\Login.js":"4","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Articulo\\Articulo.js":"5","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Display\\Display.js":"6","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Home\\Home.js":"7","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Contabilidad\\Contabilidad.js":"8","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Label\\Label.jsx":"9","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Title\\Title.jsx":"10","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Navigation\\Navigation.jsx":"11","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Input\\Input.jsx":"12"},{"size":1679,"mtime":1683082934636,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1679956446204,"results":"15","hashOfConfig":"14"},{"size":794,"mtime":1683050828008,"results":"16","hashOfConfig":"14"},{"size":3300,"mtime":1683060882632,"results":"17","hashOfConfig":"14"},{"size":12140,"mtime":1683086068820,"results":"18","hashOfConfig":"14"},{"size":11555,"mtime":1683077704836,"results":"19","hashOfConfig":"14"},{"size":850,"mtime":1683076064991,"results":"20","hashOfConfig":"14"},{"size":389,"mtime":1683050828011,"results":"21","hashOfConfig":"14"},{"size":179,"mtime":1681339576389,"results":"22","hashOfConfig":"14"},{"size":227,"mtime":1681343692240,"results":"23","hashOfConfig":"14"},{"size":1369,"mtime":1683055003179,"results":"24","hashOfConfig":"14"},{"size":493,"mtime":1681339538703,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"1lgsgtm",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\index.js",["68"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport  {BrowserRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter> \r\n    <App />\r\n     </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n\r\n\r\n\r\n/*const express = require('express');\r\nconst cors = require('cors');\r\nconst mysql = require('mysql');\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n\r\nconst connection = mysql.createConnection({\r\n  host: 'localhost',\r\n  user: 'root',\r\n  password: 'felipe0228',\r\n  database: 'juanmcell'\r\n});\r\n\r\nconnection.connect((err) => {\r\n  if (err) throw err;\r\n  console.log('Conectado a la base de datos MySQL');\r\n});\r\n\r\napp.listen(4000, () => {\r\n  console.log('Servidor backend en ejecución en el puerto 4000');\r\n});\r\n\r\napp.get('/productos', (req, res) => {\r\n  connection.query('SELECT * FROM productos', (err, rows) => {\r\n    if (err) throw err;\r\n    res.send(rows);\r\n  });\r\n});\r\n\r\napp.get('/productos/:id', (req, res) => {\r\n  connection.query('SELECT * FROM productos WHERE id = ?', [req.params.id], (err, rows) => {\r\n    if (err) throw err;\r\n    res.send(rows[0])\r\n  });\r\n});\r\n*/\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\reportWebVitals.js",[],[],"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\App.js",["69"],[],"//import Login from './pages/Login/Login';\r\nimport React, { Component } from 'react';\r\nimport Login from \"./pages/Login/Login\";\r\nimport Articulo from './pages/Articulo/Articulo';\r\nimport {Route, Routes } from 'react-router-dom';\r\nimport Display from './pages/Display/Display';\r\nimport Home from './pages/Home/Home';\r\nimport Contabilidad from './pages/Contabilidad/Contabilidad';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/articulo\" element={<Articulo />} />\r\n        <Route path=\"/display\" element={<Display />} />\r\n        <Route path=\"/home\" element={<Home/>}/>\r\n        <Route path=\"/contabilidad\" element={<Contabilidad/>}/>\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Login\\Login.js",["70"],[],"import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport Title from '../components/Title/Title';\r\nimport Label from '../components/Label/Label';\r\nimport Input from '../components/Input/Input';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nconst Login = () => {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [user,setUser] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [isLogin,setIsLogin] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    function ifMatch(param) {\r\n        if (param.user.length > 0 && param.password.length > 0) {\r\n          if (param.user === \"root\" && param.password === \"root_*123\") {\r\n            const { user, password } = param;\r\n            let ac = { user, password };\r\n            let account = JSON.stringify(ac);\r\n            localStorage.setItem(\"account\", account);\r\n            setIsLogin(true);\r\n            navigate(\"/home\", { state: { isLogin: true } }); // pasa isLogin como propiedad de estado\r\n          } else {\r\n            setIsLogin(false);\r\n            setShowAlert(true);\r\n          }\r\n        } else {\r\n          setIsLogin(false);\r\n          setShowAlert(true);\r\n        }\r\n      }\r\n      \r\n    function  handleChange(name,value) {\r\n        if(name === 'usuario'){\r\n            setUser(value)\r\n        }else{\r\n            setPassword(value)\r\n        }\r\n    };\r\n    console.log('usuario:',user)\r\n    console.log('password', password)\r\n\r\n    function handleSubmit() {\r\n        let account = {user,password}\r\n\r\n        if(account){\r\n            ifMatch(account);\r\n        }\r\n    };\r\n    return( \r\n        <div className='tbody'>\r\n            <div className=\"alert-container\" style={{ display: showAlert ? \"block\" : \"none\" }}>\r\n                <p>Usuario o contraseña incorrectos</p>\r\n            </div>\r\n            <div className='bodyLogin'>\r\n                <div className='login-container'>\r\n                    <Title text={\r\n                        <div>\r\n                            <h1>JuanMCell</h1>\r\n                            <p>Iniciar sesión</p>\r\n                        </div>\r\n                    }/>\r\n                    <div>\r\n                    <Label text='Usuario'/>\r\n\r\n                        <Input\r\n                        attribute={{\r\n                            id:'usuario',\r\n                            name:'usuario',\r\n                            type:'text',\r\n                            placeHolder:'ingrese su usuario'\r\n\r\n                        }}\r\n                        handleChange={handleChange}\r\n                        />\r\n                        <Label text='Contraseña'/>\r\n                        <Input\r\n                        attribute={{\r\n                            id:'contraseña',\r\n                            name:'contraseña',\r\n                            type:'password',\r\n                            placeHolder:'ingrese su contraseña'\r\n\r\n                        }}\r\n                        handleChange={handleChange}\r\n                        />\r\n                        <button onClick={handleSubmit}>\r\n                            Ingresar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n};\r\nexport default Login;","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Articulo\\Articulo.js",["71","72","73","74","75","76","77","78"],[],"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Display\\Display.js",["79","80","81","82","83","84","85","86"],[],"import React, { useState } from 'react';\r\nimport './Display.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport { Table, Button, Container, Modal, ModalBody, ModalHeader, FormGroup, ModalFooter } from 'reactstrap';\r\n\r\nconst data = [\r\n    { id: 1, referencia: \"Oppo reno 5 lite\", calidad: \"OLED\", cantidad: 5, precio: 120000 },\r\n    { id: 2, referencia: \"OnePlus 11 5G\", calidad: \"AMOLED\", cantidad: 9, precio: 90000 },\r\n    { id: 3, referencia: \"Samsung j4 plus\", calidad: \"ORIGINAL\", cantidad: 2, precio: 110000 },\r\n];\r\n\r\nclass Display extends React.Component {\r\n    state = {\r\n        data: data,\r\n        form: {\r\n            id: '',\r\n            referencia: '',\r\n            calidad: '',\r\n            cantidad: '',\r\n            precio: ''\r\n        },\r\n        modalInsertar: false,\r\n        modalEditar: false,\r\n        modalEliminar: false,\r\n        idGenerado: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value,\r\n            }\r\n        });\r\n    }\r\n    mostrarModalInsertar = () => {\r\n        this.setState({ modalInsertar: true });\r\n        this.generarId();\r\n\r\n    }\r\n    ocultarModalInsertar = () => {\r\n        this.setState({ modalInsertar: false });\r\n    }\r\n    mostrarModalEditar = (registro) => {\r\n        this.setState({ modalEditar: true, form: registro });\r\n    }\r\n    ocultarModalEditar = () => {\r\n        this.setState({ modalEditar: false });\r\n    }\r\n    mostrarModalEliminar = (registro) => {\r\n        this.setState({ modalEliminar: true, form: registro });\r\n    }\r\n    ocultarModalEliminar = () => {\r\n        this.setState({ modalEliminar: false });\r\n    }\r\n    insertar = () => {\r\n        let valorNuevo = { ...this.state.form };\r\n        valorNuevo.id = this.state.idGenerado;\r\n        let lista = this.state.data;\r\n        lista.push(valorNuevo);\r\n        this.setState({ data: lista, modalInsertar: false });\r\n    }\r\n    editar = (dato) => {\r\n        let contador = 0;\r\n        let lista = this.state.data;\r\n        lista.map((registro) => {\r\n            if (dato.id == registro.id) {\r\n                lista[contador].nombre = dato.nombre;\r\n                lista[contador].cantidad = dato.cantidad;\r\n                lista[contador].precio = dato.precio;\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ data: lista, modalEditar: false });\r\n    }\r\n    eliminar = (dato) => {\r\n        let contador = 0;\r\n        let lista = this.state.data;\r\n        lista.map((registro) => {\r\n            if (dato.id == registro.id) {\r\n                lista.splice(contador, 1);\r\n            }\r\n            contador++;\r\n        });\r\n        this.setState({ data: lista, modalEliminar: false });\r\n    }\r\n    generarId = () =>{\r\n        let idNuevo = this.state.data.length + 1;;\r\n        let lista = this.state.data;\r\n        lista.map((registro) =>{\r\n            if (idNuevo == registro.id){\r\n                idNuevo = idNuevo + 1;\r\n            }\r\n        })\r\n        this.state.idGenerado = idNuevo;\r\n    }\r\n    render() {\r\n        console.log('El componente Display se está renderizando');\r\n\r\n        return (\r\n            \r\n            <>\r\n            <Navigation>\r\n            <div className='display-container'>\r\n\r\n\r\n                <Container>\r\n                    <br />\r\n                    <Button color='none' className='btn-insertar' onClick={() => this.mostrarModalInsertar()}></Button>\r\n                    <br /><br />\r\n\r\n\r\n                    <Table>\r\n                        <div className='nombre-columnas'>\r\n\r\n                        </div>\r\n                        <thead><tr><th>Id</th>\r\n                            <th>Referencia</th><th>Calidad</th><th>Cantidad</th>\r\n                            <th>Precio</th><th>Acciones</th>\r\n                        </tr></thead>\r\n                        <tbody>\r\n                            {this.state.data.map((elemento) => (\r\n                                <tr>\r\n                                    <td>{elemento.id}</td>\r\n                                    <td>{elemento.referencia}</td>\r\n                                    <td>{elemento.calidad}</td>\r\n                                    <td>{elemento.cantidad}</td>\r\n                                    <td>{elemento.precio}</td>\r\n                                    <td><Button color=\"none\" className=\"btn-editar\" onClick={() => this.mostrarModalEditar(elemento)}></Button>\r\n                                        {\"           \"}\r\n                                        <Button color=\"none\" className='btn-eliminar' onClick={() => this.mostrarModalEliminar(elemento)}></Button></td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n\r\n                <Modal isOpen={this.state.modalInsertar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Insertar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Id:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                readOnly\r\n                                type=\"text\" value={this.state.idGenerado}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Referencia:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"referencia\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Calidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"calidad\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Cantidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"cantidad\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Precio:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"precio\"\r\n                                type=\"text\" onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => this.insertar()}>Insertar</Button>\r\n                        <Button color=\"danger\" onClick={() => this.ocultarModalInsertar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.modalEditar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Editar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Id:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                readOnly\r\n                                type=\"text\" value={this.state.form.id}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Referencia:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"referencia\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.referencia}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Calidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"calidad\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.calidad}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Cantidad:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"cantidad\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.cantidad}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label>\r\n                                Precio:\r\n                            </label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"precio\"\r\n                                type=\"text\" onChange={this.handleChange} value={this.state.form.precio}\r\n                            />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={() => this.editar(this.state.form)}>Editar</Button>\r\n                        <Button color=\"danger\" onClick={() => this.ocultarModalEditar()}>Cancelar</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                <Modal isOpen={this.state.modalEliminar}>\r\n                    <ModalHeader>\r\n                        <div><h3>Editar Registro</h3></div>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormGroup>\r\n                            <label>\r\n                                ¿Deseas eliminar el display seleccionado con el id: {this.state.form.id}?\r\n                            </label>\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n\r\n                        <Button color=\"none\" className='btn-aceptar1' onClick={() => this.eliminar(this.state.form)}></Button>\r\n                        <Button color=\"none\" className='btn-cancelar1' onClick={() => this.ocultarModalEliminar()}></Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n                </div>\r\n            </Navigation>\r\n                \r\n            </>)\r\n    }\r\n}\r\n\r\nexport default Display;","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Home\\Home.js",[],[],"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\Contabilidad\\Contabilidad.js",["87"],[],"import React, { useState } from 'react';\r\nimport './Contabilidad.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navigation from '../components/Navigation/Navigation';\r\n\r\n\r\n\r\nclass Contabilidad extends React.Component {\r\n    render(){\r\n        return(\r\n            <Navigation>\r\n                \r\n            </Navigation>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contabilidad;","E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Label\\Label.jsx",[],[],"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Title\\Title.jsx",[],[],"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Navigation\\Navigation.jsx",[],[],"E:\\Backup PC\\Escritorio\\Programas\\Java\\Repositorios Git\\juanmcell\\juanmcell\\juanmcell\\src\\pages\\components\\Input\\Input.jsx",[],[],{"ruleId":"88","severity":1,"message":"89","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":13},{"ruleId":"88","severity":1,"message":"92","line":2,"column":17,"nodeType":"90","messageId":"91","endLine":2,"endColumn":26},{"ruleId":"88","severity":1,"message":"93","line":13,"column":12,"nodeType":"90","messageId":"91","endLine":13,"endColumn":19},{"ruleId":"88","severity":1,"message":"94","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":103,"column":30,"nodeType":"97","messageId":"98","endLine":103,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":104,"column":25,"nodeType":"101","messageId":"102","endLine":104,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":122,"column":38,"nodeType":"97","messageId":"98","endLine":122,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":123,"column":33,"nodeType":"101","messageId":"102","endLine":123,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":136,"column":30,"nodeType":"97","messageId":"98","endLine":136,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":137,"column":25,"nodeType":"101","messageId":"102","endLine":137,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":141,"column":9,"nodeType":"105","messageId":"106","endLine":141,"endColumn":19},{"ruleId":"88","severity":1,"message":"94","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"96","line":67,"column":30,"nodeType":"97","messageId":"98","endLine":67,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":68,"column":25,"nodeType":"101","messageId":"102","endLine":68,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":80,"column":30,"nodeType":"97","messageId":"98","endLine":80,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":81,"column":25,"nodeType":"101","messageId":"102","endLine":81,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":91,"column":30,"nodeType":"97","messageId":"98","endLine":91,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":92,"column":25,"nodeType":"101","messageId":"102","endLine":92,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":96,"column":9,"nodeType":"105","messageId":"106","endLine":96,"endColumn":19},{"ruleId":"88","severity":1,"message":"94","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'isLogin' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation"]